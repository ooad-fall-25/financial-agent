// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NewsSummary {
  id         String  @id @default(uuid())
  userId     String
  headline   String
  aiRepsonse String
  provider   String
  category   String
  language   String
  url        String?

  isByCategory Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Conversation {
  id        String    @id @default(uuid())
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  userId    String
  role      String // "user" or "assistant"
  content   String
  createdAt DateTime @default(now())

  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
}

model Report {
  id                   String @id @default(uuid())
  userId               String
  extractedFileContent String
  inputText            String
  contentType          String
  aiResponse           String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  medias Media[] // for now, multiple files are allowed and generated into one report 
}

model Media {
  id          String @id @default(uuid())
  bucket      String
  key         String
  contentType String
  size        BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reportId String
  report   Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
}
